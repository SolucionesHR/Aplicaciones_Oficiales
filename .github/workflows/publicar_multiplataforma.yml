name: 🌍 Publicar App Multiplataforma con Catálogo Visual

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: "Nombre de la app"
        required: true
      version:
        description: "Versión de la app"
        required: true
      private_repo:
        description: "Repositorio privado origen (owner/repo)"
        required: true
        default: "SolucionesHR/mercados_cuba_delivery"
      tag:
        description: "Tag del release privado (ej: v1.0.5)"
        required: true
        default: "v1.0.5"
      assets:
        description: "Lista de archivos en formato: plataforma=archivo (separados por comas, ej: Android=mensajero.apk,Windows=setup.exe)"
        required: true

jobs:
  publish-multi:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 📂 Checkout repositorio público
        uses: actions/checkout@v4

      - name: 📥 Descargar todos los assets desde release privado
        env:
          GH_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
        run: |
          IFS=',' read -ra ITEMS <<< "${{ github.event.inputs.assets }}"
          for PAIR in "${ITEMS[@]}"; do
            PLATFORM="${PAIR%%=*}"
            ASSET="${PAIR#*=}"
            EXT="${ASSET##*.}"
            DEST="apps/${{ github.event.inputs.app_name }}/${PLATFORM}/${{ github.event.inputs.app_name }}_${PLATFORM}_${{ github.event.inputs.version }}.${EXT}"

            echo "📦 Descargando $ASSET para $PLATFORM..."
            mkdir -p "$(dirname "$DEST")"
            gh release download "${{ github.event.inputs.tag }}" \
              --repo "${{ github.event.inputs.private_repo }}" \
              --pattern "$ASSET" \
              -O "$DEST" \
              --clobber
          done

      - name: 🖼️ Generar catálogo visual en README
        run: |
          APP="${{ github.event.inputs.app_name }}"
          VER="${{ github.event.inputs.version }}"

          echo "🧩 Generando catálogo visual para GitHub..."

          CAT_HEADER="## 📱 Catálogo de ${APP}\n\n<div style='display:flex;flex-wrap:wrap;gap:10px;'>"
          CAT_FOOTER="</div>\n\n"

          echo -e "$CAT_HEADER" > CATALOG.md

          find apps/$APP -type f | while read -r FILE; do
            PLAT=$(echo "$FILE" | cut -d'/' -f3)
            EXT="${FILE##*.}"

            ICON=""
            case "$PLAT" in
              Android) ICON="🤖";;
              Windows) ICON="💻";;
              iOS) ICON="🍎";;
              Web) ICON="🌐";;
              *) ICON="📦";;
            esac

            echo "<div style='border:1px solid #ddd;border-radius:10px;padding:10px;width:200px;text-align:center;'>
              <div style='font-size:2em;'>$ICON</div>
              <strong>${APP}</strong><br/>
              <em>$PLAT</em><br/>
              <a href='$FILE' style='display:inline-block;margin-top:5px;padding:5px 10px;background:#28a745;color:#fff;border-radius:5px;text-decoration:none;'>Descargar v${VER}</a>
            </div>" >> CATALOG.md
          done

          echo -e "$CAT_FOOTER" >> CATALOG.md

          # Reemplazar sección anterior de catálogo en README
          awk '/## 📱 Catálogo/{flag=1;next}/<\/div>/{flag=0;next}!flag' README.md > README.tmp
          cat CATALOG.md README.tmp > README.md
          rm README.tmp CATALOG.md

          echo "✅ Catálogo visual generado y agregado al README."

      - name: 💾 Commit y push
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "📦 Publicada ${{ github.event.inputs.app_name }} v${{ github.event.inputs.version }} con catálogo visual multiplataforma"
          git push
